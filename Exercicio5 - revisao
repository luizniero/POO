Criar a classe Círculo

        |-------------------------------|
        |               Círculo         |
        |-------------------------------|
        | #centro: Ponto 2d             |
        | # raio: T                     |
        |-------------------------------|
        | + Círculo(): void             |
        | + getCentro(): Ponto 2d       |
        | + setCentro(Ponto 2d): void   |
        | + getRaio(): T                |
        | + getArea() : T               |
        | + getPerimetro(): T           |
        |-------------------------------|
        |
        
/* Exercicio 1: Implementar a classe circulo */

#include<iostream>
#include<clocale>
#include<cstdlib>
#include<cmath>
#include<iomanip>

using std::cout;
using std::cin;
using std::endl;


class Ponto2D {
	protected:
		double CoordX;
		double CoordY;
		
	public:
		Ponto2D( double x, double y);
		double getCoordX();
		double getCoordY();
		void setCoordX(double x);
		void setCoordY(double y);
		void display();
};


class Circulo{
	private:
		Ponto2D *P1;
		double raio;
		
	public:
		Circulo();
		Ponto2D getCentro();
		void setCentro(Ponto2D);
		double getRaio();
		double getArea();
		double getPerimetro();		
};


//Circulo

Circulo::Circulo(){ //construtor
		P1 = new Ponto2D();
		cout<<"\nDigite o raio"
		cin>>raio;
}

Ponto2D* Circulo::getCentro(){
		return P1;
}

	


double Circulo::getRaio(){	
	return raio;	
}

double Circulo::getArea(){
	double Area = 3.14*raio*raio;
	return Area;
}

double Circulo::getPerimetro(){
	double Perimetro = (3.14)*2*raio;
	return Perimetro;
}











//Ponto 2D
Ponto2D::Ponto2D()){
	cout<<"\nDigite a coordenada X do centro";
	cin>>CoordX;
	cout<"\nDigite a coordenada Y do centro";
	cin>>CoordY;
}

double Ponto2D::getCoordX(){
	return CoordX;	
}

double Ponto2D::getCoordY(){
	return CoordY;
}

void Ponto2D::setCoordX(double x) {
	CoordX = x;
}

void Ponto2D::setCoordY(double y){
	CoordY = y;
}

void Ponto2D::display(){
	
	cout<<"P("<<CoordX<<","<<CoordY<<")"<<endl;
	
}
